# Key bindings

## Leader key
unbind C-b
unbind M-q
set -g prefix M-q
bind M-q send-prefix

## Reload config key
unbind r
bind r source-file ~/.tmux.conf
display-message "Reloaded configuration: ~/.tmux.conf"

## New window
unbind n
bind-key n command-prompt -p "Name of new window: " "new-window -n '%%' -c '#{pane_current_path}'"

## Clear screen
unbind C
bind C send-keys 'C-l'

## Move windows
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

## Go to the next and previous window
bind -n M-\\ next

## Split panes
unbind %
unbind '"'

bind | split-window -hc "#{pane_current_path}"
bind-key "\\" split-window -h -c "#{pane_current_path}"      # Split horizontally
bind-key "|" split-window -fh -c "#{pane_current_path}"      # Global split horizontally

bind - split-window -vc "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"       # Split vertically
bind-key "_" split-window -fv -c "#{pane_current_path}"      # Global split vertically

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

## Kill windows & panes
unbind C-7
unbind C-x
bind-key C-x kill-pane

# Vim motion
setw -g mode-keys vi
set -g status-keys vi
set-window-option -g mode-keys vi

## Resize pane
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

## Tmux Vim Navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf|foobar)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" { send-keys C-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n 'C-j' if-shell "$is_vim" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n 'C-k' if-shell "$is_vim" { send-keys C-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n 'C-l' if-shell "$is_vim" { send-keys C-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi 'C-j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi 'C-k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi 'C-l' if-shell -F '#{pane_at_right}'  {} { select-pane -R }

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

bind-key -T copy-mode-vi 'C-[' send-keys -X cancel # ESC

# Mouse for resizing panes
set -g mouse on
set-option -g mouse on

# Use the system clipboard
set -g set-clipboard on

# Dont exit when closing tmux session
set -g detach-on-destroy off

# Base index & numbering
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# History limit
set-option -g history-limit 50000

# Colors
set-option -sa terminal-overrides ",*256col*:Tc"
set -g default-terminal "tmux-256color"
# set -sag terminal-features ",*:RGB"
# set -sag terminal-features ",*:usstyle"
# set -g extended-keys on
# set -sag terminal-features 'xterm*:extkeys'

# Status
set -g status-interval 1
set -g escape-time 10
set -g repeat-time 500
set -g display-time 1000

set -g status 2
set -g status-position top
set -g status-style "bg=#{@thm_mantle}"
set -g status-justify "left"

set -gF status-format[1] "#[fg=#{@thm_surface_2},bg=#{@thm_bg}]\
───────────────────────────────────────────────────────────────────────────────\
───────────────────────────────────────────────────────────────────────────────\
───────────────────────────────────────────────────────────────────────────────\
───────────────────────────────────────────────────────────────────────────────\
───────────────────────────────────────────────────────────────────────────────\
───────────────────────────────────────────────────────────────────────────────\
"

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'hendrikmi/tmux-cpu-mem-monitor'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'

## Catppuccin
set -g @catppuccin_flavor "macchiato"
set -g @catppuccin_status_background "none"
set -g @catppuccin_pane_status_enabled "off"
set -g @catppuccin_pane_border_status "off"
 
set -g status-left-length 110
set -g status-left ""

set -g status-right-length 130
set -g status-right ""

# Custom seperator
set -g @custom_separator "#[fg=#{@thm_overlay_0},none]|"

# Session
set -ga status-left "#[fg=#{@thm_green},bg=default]"
set -ga status-left "#{?client_prefix,#[#{fg=#{@thm_green}}]#[reverse]#[bold],}"
set -ga status-left "  #{?#{e|>:#{window_width},90}, #S,} "
set -ga status-left "#{?client_prefix,#[none],}"
set -ga status-left "#{E:#{@custom_separator}}"

# # Custom script
# set -ga status-right "#[fg=#{@thm_blue},bg=default]"
# set -ga status-right " ⏰#{?#{e|>:#{window_width},80}, #(~/.tmux_scripts/do_something.sh),} "
# set -ga status-right "#{E:#{@custom_separator}}"

# Application
set -ga status-right "#[fg=#{@thm_maroon},bg=default]"
set -ga status-right " #{?#{e|>:#{window_width},80}, #{pane_current_command},} "
set -ga status-right "#{E:#{@custom_separator}}"

# CPU
set -ga status-right "#[fg=#{@thm_green},bg=default]"
set -ga status-right " #{?#{e|>:#{window_width},80}, #{cpu -i 3},} "
set -ga status-right "#{E:#{@custom_separator}}"

# Memory
set -ga status-right "#[fg=#{@thm_green},bg=default]"
set -ga status-right " #{?#{e|>:#{window_width},80}, #{mem},} "
set -ga status-right "#{E:#{@custom_separator}}"

# Directory
set -ga status-right "#[fg=#{@thm_blue},bg=default]"
set -ga status-right " #{?#{e|>:#{window_width},80}, #{=/24/...:#{b:pane_current_path}},} "
set -ga status-right "#{E:#{@custom_separator}}"

# Date
set -ga status-right "#[fg=#{@thm_lavender},bg=default]"
set -ga status-right " #{?#{e|>:#{window_width},95}, %Y-%m-%d,} "
set -ga status-right "#{E:#{@custom_separator}}"

# Time
set -ga status-right "#[fg=#{@thm_fg},bg=default]"
set -ga status-right " #{?#{e|>:#{window_width},85}, %H:%M,} "

# # Resurrect & Continuum
# set -g @resurrect-capture-pane-contents 'on'
# set -g @continuum-restore 'on'
# set -g @continuum-save-interval '1'

# Bootstrap tpm
set -g @tpm_path "$HOME/.tmux/plugins/tpm"
run-shell 'test -d $HOME/.tmux/plugins/tpm || echo "Installing TPM..."'
run-shell 'test -d $HOME/.tmux/plugins/tpm || git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm'
run-shell "$HOME/.tmux/plugins/tpm/tpm"

run '~/.tmux/plugins/tpm/tpm'

# Pane styles
setw -g pane-border-status off
setw -g pane-border-format ""
setw -g pane-active-border-style "bg=default,fg=#{@thm_peach}"
setw -g pane-border-style "bg=default,fg=#{@thm_overlay_1}"
setw -g pane-border-lines single

# Window styles
set -gF window-status-separator "#[fg=#{@thm_overlay_0}]"
set -wg automatic-rename on
set -g automatic-rename-format "window"

set -g window-status-format " #{?#{==:#{window_name},window},#I,#W} "
set -g window-status-style "fg=#{@thm_rosewater},bg=default"
set -g window-status-last-style "fg=#{@thm_peach}"
set -g window-status-activity-style "fg=#{@thm_red},bold"
set -g window-status-bell-style "fg=#{@thm_red},bold"

set -g window-status-current-format " #{?#{==:#{window_name},window},#I,#W} "
set -g window-status-current-style "fg=#{@thm_peach},bold,reverse"